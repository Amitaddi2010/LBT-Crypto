{"version":3,"sources":["imgs/logo.png","components/Navbar/Navbar.jsx","imgs/dice.gif","components/Fancylogo/Fancylogo.jsx","components/Lottery/Lottery.jsx","components/Swap/Swap.jsx","components/Footer/Footer.jsx","components/Timeline/Timeline.jsx","imgs/Team1.png","imgs/T2.jpeg","imgs/ Team4.webp","components/Team/Team.jsx","imgs/Nfts/bighead-1.svg","imgs/Nfts/bighead-2.svg","imgs/Nfts/bighead-3.svg","imgs/Nfts/bighead-4.svg","imgs/Nfts/bighead-5.svg","imgs/Nfts/bighead-6.svg","imgs/Nfts/bighead-7.svg","imgs/Nfts/bighead-8.svg","imgs/Nfts/bighead-9.svg","imgs/Nfts/bighead-10.svg","components/NFT/NFT.jsx","imgs/Metaverse-img/meta2.png","components/Metaverse/Metaverse.jsx","utils/utils.js","App.jsx","reportWebVitals.js","index.js"],"names":["Navbar","handler","show","account","className","id","href","src","logo","alt","onClick","undefined","document","getElementById","scrollIntoView","behavior","block","Fancylogo","Pic","Lottery","manager","setLoader","useState","isManager","setIsManager","transact","web3","window","eth","net","getId","networkId","lotterydata","lottery","networks","sendTransaction","from","to","address","value","then","tx","console","log","alert","selectWinner","Contract","abi","methods","send","useEffect","toLowerCase","Swap","etherBalance","tokenBalance","buyTokens","sellTokens","setFrom","setTo","angle","setAngle","input","setInput","multiplier","setMultiplier","utils","fromWei","type","placeholder","onChange","e","target","temp","old","style","transform","background","fontSize","borderRadius","boxShadow","animation","disabled","etherAmount","toWei","toBN","Footer","Timeliner","Aos","init","Team","T1","T3","T2","NFT","direction","NFT1","border","height","NFT2","NFT3","NFT4","NFT5","NFT6","NFT7","NFT8","NFT9","NFT10","Metaverse","Meta2","loadWeb3","ethereum","Web3","request","method","currentProvider","loadAccount","setAccount","getAccounts","accounts","loadContract","setManager","setLotteryContract","setLotteryAddress","contract","call","err","res","loadBalance","setTokenBal","setbalanceAsEther","getBalance","ethBalance","tokenData","Token","token","balanceOf","tokenBal","toString","LWCSwapData","EthSwap","tempAccount","buy_token","on","hash","tokenAmount","LWCSwap","approve","sellToken","App","setShow","balanceAsEther","loading","handleAccountChange","removeListener","length","amount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.539ff95b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.51995d31.png\";","import './menubar.css'\nimport logo from '../../imgs/logo.png'\nimport './../../App'\nfunction Navbar({handler, show, account}) {\n \n// function myFunction() {\n//   var x = document.getElementById(\"myTopnav\").scrollIntoView({behavior: 'auto',\n//   block: 'start'});\n//   if (x.className === \"nav\") {\n//     x.className += \"responsive\";\n//   } else {\n//     x.className = \"nav\";\n//   }\n// }\n \n  return (\n     <div className='header'>\n     \n    <nav className='nav'>\n    <div className='icon' id =\"myTopnav\">\n    <a href=\"/\">\n        <img className='mainlogo' src = {logo} alt=\"\" ></img>\n        </a>\n          </div>\n      <button   onClick={()=>handler(2)} className={show === 2 ? `active`:undefined}>Swap</button>\n      <button onClick={()=>handler(1)} className={show === 1 ? `active`:undefined}>Lottery</button>\n      <button onClick={()=>{\n        document.getElementById('aboutus').scrollIntoView({behavior: 'smooth',\n        block: 'start'});\n      }}>About Us</button> \n      <button onClick={()=>{\n        document.getElementById('timeline').scrollIntoView({behavior: 'smooth',\n        block: 'start'});\n      }}>Roadmap</button>\n       <button onClick={()=>{\n        document.getElementById('NFT').scrollIntoView({behavior: 'smooth',\n        block: 'start'});\n      }}>NFT</button>\n       <button onClick={()=>{\n        document.getElementById('Metaverse').scrollIntoView({behavior: 'smooth',\n        block: 'start'});\n      }}>Metaverse</button>\n      <button className='connect'>Account : {account ? account : \"Not Connected\"}</button>\n      {/* <a href=\"#\" className=\"icon\" onClick={myFunction}>\n    <i className=\"fa fa-bars\"></i>\n    </a> */}\n    \n     </nav>\n     </div>\n          \n           \n          \n\n\n//     {/* <button className='connect' \n//     type=\"button\"  onClick={async()=>{\n//       const accounts = await window.ethereum.request({\n//         method: \"eth_requestAccounts\"\n        \n//       })\n//       console.log(accounts)\n//     }}>\n    \n// Connect MetaMask</button> */}\n\n//     </div>\n  )\n}\n\nexport default Navbar","export default __webpack_public_path__ + \"static/media/dice.51d3bd55.gif\";","import React from 'react'\nimport \"./Fancylogo.css\";\nimport Pic from '../../imgs/dice.gif'\nfunction Fancylogo() {\n  return (\n\n\n     <div>\n     <img className='Pic' src = {Pic} alt=\"\" ></img>\n      \n  </div>\n        \n  )\n}\n\nexport default Fancylogo","import React, { useEffect, useState } from 'react'\n \nimport './../Lottery/Lottery.css'\nimport './../../App'\nimport lottery from '../../abis/lottery.json';\n \n \n \nfunction Lottery({manager, account, setLoader}) {\n  const [isManager, setIsManager] = useState(false);\n  const transact = async ()=>{\n      setLoader(true);\n      let web3 =  window.web3;\nconst networkId = await web3.eth.net.getId();\nconst lotterydata = lottery.networks[networkId];\n      web3.eth.sendTransaction({ \n        from: account,\n        to: lotterydata.address, \n        value: '1000000000000000000',\n      }).then( function(tx) { ;\n      console.log(\"Transaction: \", tx); \n      setLoader(false);\n      alert(' Participated Sucessfully ')\n       \n      });\n  }\n\n  const selectWinner = async ()=>{\n    const web3 = window.web3;\n    const networkId = await web3.eth.net.getId();\n    const lotterydata = lottery.networks[networkId];\n    const contract = new web3.eth.Contract(lottery.abi, lotterydata.address);\n    contract.methods.selectWinner().send({from:account})\n  }\n\n  // const getBalance = async ()=>{\n  //   const web3 = window.web3;\n  //   const networkId = await web3.eth.net.getId();\n  //   const lotterydata = lottery.networks[networkId];\n  //   const contract = new web3.eth.Contract(lottery.abi, lotterydata.address);\n  //   contract.methods.getBalance();\n  //   console.log(getBalance);\n  // }\n\n  useEffect(()=>{\n    if(account && manager){\n      if(account.toLowerCase()===manager.toLowerCase()){\n        setIsManager(true);\n      }else{\n        setIsManager(false);\n      }\n    }\n  },[manager, account])\n\n  return (\n    <div className='lottery'>\n    <h2>Lottery </h2>\n      {isManager?\n      <div>\n      <h1>Manager</h1>\n      <button onClick={\n        ()=>{\n          console.log(\"selecting winner\");\n          selectWinner();\n        }\n      }><h3>Select Winner</h3></button>\n      </div>\n      :\n      <div>\n      <h2>Try Your Luck</h2>\n      <button\n      onClick={()=>{\n        transact()\n      }}\n      ><h3>Participate Now</h3></button>\n      \n      </div>}\n    </div>\n  )\n}\n\nexport default Lottery","import { useState, useEffect } from 'react'\nimport { AiOutlineSwap } from 'react-icons/ai'\nimport './Swap.css';\nimport './../../App'\n\nfunction Swap({ etherBalance, tokenBalance, buyTokens, sellTokens }) {\n  const [from, setFrom] = useState('LBT');\n  const [to, setTo] = useState('ETH');\n  const [angle, setAngle] = useState(90);\n  const [input, setInput] = useState(0);\n  const [multiplier, setMultiplier] = useState(100);\n  useEffect(() => {\n    if (from === 'LBT') {\n      setMultiplier(0.01);\n    } else if (from === 'ETH') {\n      setMultiplier(100);\n    }\n  }, [from])\n\n  return (\n    <div className='swap'>\n      <h2 className='swap-title'>Swap</h2>\n\n      <div className='balance'>{from}\n        <span>{from === 'ETH' ? etherBalance : (tokenBalance ? window.web3.utils.fromWei(tokenBalance, \"Ether\") : '0')}</span>\n        <div><input className='text' type=\"text\" placeholder=\"Enter Amount\" value={input} onChange={(e) => {\n          setInput(e.target.value)\n        }} />\n        </div>\n      </div>\n      <AiOutlineSwap onClick={() => {\n        let temp = from;\n        setFrom(to);\n        setTo(temp);\n        setAngle(old => old + 180);\n      }} style={{\n        transform: `rotate(${angle}deg)`,\n        background:  '#484848',\n        fontSize: '3.5rem',\n        borderRadius: '50%',\n        boxShadow: '0rem 0rem 0rem .2rem rgb(15, 244, 221)',\n        animation: ''\n      }} />\n\n      <div className='balance'>{to}\n        <span>{to === 'ETH' ? etherBalance : (tokenBalance ? window.web3.utils.fromWei(tokenBalance, \"Ether\") : '0')}</span>\n        <div>\n          <input className='text' type=\"text\"  disabled value={input * multiplier} />\n        </div>\n      </div>\n      \n      <button className='Swap'\n        onClick={\n          () => {\n            if (from === 'ETH') {\n              let etherAmount = window.web3.utils.toWei(input, \"Ether\");\n              buyTokens(etherAmount);\n            } else {\n              let etherAmount = window.web3.utils.toWei(window.web3.utils.toBN(input), \"Ether\");\n              sellTokens(etherAmount);\n            }\n          }\n        }\n\n      ><h3>Swap</h3></button>\n\n      <div className=\"ExchangeRate\">\n        <span className=\"EXC-left \"> Exchange rate: </span>\n        <span className=\"EXC-right\"> 1 ETH :  100 LBT &#9432;   </span>\n         \n      </div>\n    </div>\n  )\n}\n\nexport default Swap","import React from 'react'\n import './../Footer/FooterStyles.css'\nexport default function Footer() {\n  return (\n    \n    <section>\n    <div className='footer'>\n     <h2> Lottery Block Token &#169;  </h2>\n       <h3>All rights reserved</h3>\n    </div>\n    </section>\n  )\n}\n\n","import {useEffect} from 'react'\nimport  Aos  from 'aos';\nimport './../Timeline/timeline.css'\nexport default function Timeliner() {\n  useEffect(() => {\n    Aos.init();\n    console.log(Aos)\n  }, [])\n  return (\n\n    <section id=\"timeline\">\n   <h1 className=\"heading1\"><span>Our</span>Roadmap</h1>\n  <article>\n    <div className=\"inner\">\n      <span className=\"date\">\n        <span className=\"day\">30<sup>th</sup></span>\n        <span className=\"month\">Jun</span>\n        <span className=\"year\">2022</span>\n      </span>\n      <h2>LBT Token</h2>\n      <p> A Lottery Block Token Deployment: Test Network: 1 Polygon 2. Ropsten </p>\n    </div>\n  </article>\n  <article>\n    <div className=\"inner\">\n      <span className=\"date\">\n        <span className=\"day\">26<sup>th</sup></span>\n        <span className=\"month\">Nov</span>\n        <span className=\"year\">2022</span>\n      </span>\n      <h2>Lottery Block Token </h2>\n      <p>\n      A Lottery Block Token Deployment: Main Network: Polygon Blockchain\n      </p>\n    </div>\n  </article>\n  <article>\n    <div className=\"inner\">\n      <span className=\"date\">\n        <span className=\"day\">23<sup>th</sup></span>\n        <span className=\"month\">Jan</span>\n        <span className=\"year\">2023</span>\n      </span>\n      <h2>NFT Project Launch</h2>\n      <p>NFT Marketplace Launch : 1. Buy and Sell 2. Mint NFT </p>\n    </div>\n  </article>\n  <article>\n    <div className=\"inner\">\n      <span className=\"date\">\n        <span className=\"day\">26<sup>th</sup></span>\n        <span className=\"month\">Mar</span>\n        <span className=\"year\">2022</span>\n      </span>\n      <h2>Metaverse</h2>\n      <p>Launch our LBT into Metaverse : Casino Block in Metaverse , Spin to Win $ </p>\n    </div>\n  </article>\n   \n</section>\n  )\n}\n\n","export default __webpack_public_path__ + \"static/media/Team1.1372a2b8.png\";","export default __webpack_public_path__ + \"static/media/T2.9b093867.jpeg\";","export default __webpack_public_path__ + \"static/media/ Team4.60b417e9.webp\";","import React from 'react'\nimport './../Team/team.css'\nimport T1 from './../../imgs/Team1.png'\nimport T2 from './../../imgs/T2.jpeg'\nimport T3 from './../../imgs/ Team4.webp'\n\n// import { SwitchTransition, CSSTransition } from \"react-transition-group\";\n\nexport default function Team() {\n  return (\n\n    <div className=\"container1\" id =\"aboutus\">\n    <h1 className=\"heading\"><span>meet</span>Our Team</h1>\n    <div className=\"profiles\">\n      <div className=\"profile\">\n        <img alt=\"\"  className=\"profile-img\" src={T1} />\n        <h3 className=\"user-name\">Amit Saraswat</h3>\n        <h5> Founder and CEO </h5>\n        <p>Researcher, Blockchain Developer</p>\n      </div>\n      \n      <div className=\"profile\">\n         \n        <img alt=\"\" className='profile-img' src={T3} />\n        <h3 className=\"user-name\">Tarun Raddy</h3>\n        <h5>Co-Founder</h5>\n        <p>Full Stack Blockchain developer </p>\n      </div>\n      <div className=\"profile\">\n        <img alt=\"\"  className=\"profile-img\" src={T2}/>\n      \n        <h3 className=\"user-name\">Rukhmani</h3>\n        <h5>Managing Partner</h5>\n        <p> Team Leader and Management </p>\n      </div>\n    </div>\n  </div>\n\n  )\n}\n\n","export default __webpack_public_path__ + \"static/media/bighead-1.f64b34fd.svg\";","export default __webpack_public_path__ + \"static/media/bighead-2.531bee23.svg\";","export default __webpack_public_path__ + \"static/media/bighead-3.ee360106.svg\";","export default __webpack_public_path__ + \"static/media/bighead-4.70326ba8.svg\";","export default __webpack_public_path__ + \"static/media/bighead-5.95b99530.svg\";","export default __webpack_public_path__ + \"static/media/bighead-6.9b137ad1.svg\";","export default __webpack_public_path__ + \"static/media/bighead-7.a8629561.svg\";","export default __webpack_public_path__ + \"static/media/bighead-8.a80df18a.svg\";","export default __webpack_public_path__ + \"static/media/bighead-9.692c0380.svg\";","export default __webpack_public_path__ + \"static/media/bighead-10.728c802a.svg\";","import React from 'react'\nimport './NFT.css'\nimport NFT1 from './../../imgs/Nfts/bighead-1.svg'\nimport NFT2 from './../../imgs/Nfts/bighead-2.svg'\nimport NFT3 from './../../imgs/Nfts/bighead-3.svg'\nimport NFT4 from './../../imgs/Nfts/bighead-4.svg'\nimport NFT5 from './../../imgs/Nfts/bighead-5.svg'\nimport NFT6 from './../../imgs/Nfts/bighead-6.svg'\nimport NFT7 from './../../imgs/Nfts/bighead-7.svg'\nimport NFT8 from './../../imgs/Nfts/bighead-8.svg'\nimport NFT9 from './../../imgs/Nfts/bighead-9.svg'\nimport NFT10 from './../../imgs/Nfts/bighead-10.svg'\n \nexport default function NFT() {\n  return (\n    <div id='NFT'>\n        <h1 className=\"heading1\"><span>Our</span>NFT</h1>\n        \n  <marquee className='marquee' direction = \"left\">\n        <img alt=\"\" className='svgNFT' src={NFT1} border= \"1rem double #e8ea96\" border-radius= \"20%\" height=\"250px\" />\n        <img alt=\"\" className='svgNFT' src={NFT2} border= \"1rem double #e8ea96\" height=\"250px\" />\n        <img alt=\"\" className='svgNFT' src={NFT3} border= \"1rem double #e8ea96\" height=\"250px\" />\n        <img alt=\"\" className='svgNFT' src={NFT4} border= \"1rem double #e8ea96\" height=\"250px\" />\n        <img alt=\"\" className='svgNFT' src={NFT5} border= \"1rem double #e8ea96\" height=\"250px\" />\n        </marquee>\n        <marquee className='marquee' direction = \"right\">\n        <img alt=\"\" className='svgNFT' src={NFT6} border= \"1rem double #e8ea96\" height=\"250px\" />\n        <img alt=\"\" className='svgNFT' src={NFT7} border= \"1rem double #e8ea96\" height=\"250px\" />\n        <img alt=\"\" className='svgNFT' src={NFT8} border= \"1rem double #e8ea96\" height=\"250px\" />\n        <img alt=\"\" className='svgNFT' src={NFT9} border= \"1rem double #e8ea96\" height=\"250px\" />\n        <img alt=\"\" className='svgNFT' src={NFT10}border= \"1rem double #e8ea96\" height=\"250px\" />\n         \n        </marquee>\n    \n    \n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/meta2.793e80c4.png\";","import React from 'react'\nimport './Metaverse.css'\nimport Meta2 from './../../imgs/Metaverse-img/meta2.png'\nexport default function Metaverse() {\n  return (\n    <div id= \"Metaverse\" className='Meta'>\n  <h1 className=\"heading1\"><span>Our</span>Metaverse</h1>\n  <h2>Metaverse 3D space development</h2>\n  <img className='Metaverse1' src={Meta2} alt=\"\"/>\n   \n  \n\n    </div>\n  )\n}\n","import lottery from '../abis/lottery.json';\nimport EthSwap from \"../abis/EthSwap.json\";\nimport Token from \"../abis/Token.json\";\nimport Web3 from \"web3\";\nconst loadWeb3 = async () => {\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n      } else {\n        window.alert(\"No wallet installed\");\n      }\n      console.log(window.web3);\n  };\n  const loadAccount = async (setAccount)=>{\n    const accounts = await window.web3.eth.getAccounts();\n    console.log(accounts)\n    // web3Api.web3.eth.defaultAccount = accounts[0];\n    setAccount(accounts[0]);\n  };\n  const loadContract = async ({setManager, setLotteryContract,setLotteryAddress})=>{\n    const web3 = window.web3;\n    const networkId = await web3.eth.net.getId();\n    const lotterydata = lottery.networks[networkId];\n    const contract = new web3.eth.Contract(lottery.abi, lotterydata.address);\n    setLotteryContract(contract);\n    setLotteryAddress(lotterydata.address)\n    console.log(contract);\n    contract.methods.manager().call((err, res)=>{\n      setManager(res);\n    })\n    console.log(lotterydata.address);\n  };\n  const loadBalance = async ({account, setTokenBal, setbalanceAsEther})=>{\n    if(account && window.web3){\n      console.log('loading...');\n    const ethBalance = await window.web3.eth.getBalance(account);\n    setbalanceAsEther(window.web3.utils.fromWei(ethBalance, \"Ether\"));\n    const networkId = await window.web3.eth.net.getId();\n    const tokenData = Token.networks[networkId];\n    if (tokenData) {\n\n      const token = new window.web3.eth.Contract(Token.abi, tokenData.address);\n\n      let tokenBal = await token.methods.balanceOf(account).call();\n      setTokenBal(tokenBal.toString());\n      // console.log(tokenBal.toString());\n    } else {\n      console.log(\n        \"Oops Sorry Unfortunately contract is not deployed to this selected network. Please change your network error\"\n      );\n    }\n  }\n}\n  const buyTokens = async (etherAmount, setLoader,account) => {\n    const web3 = window.web3;\n    const networkId = await web3.eth.net.getId();\n    const LWCSwapData = EthSwap.networks[networkId];\n    setLoader(true);\n    let tempAccount = await window.web3.eth.getAccounts();\n    const LWCSwap = new window.web3.eth.Contract(\n      EthSwap.abi,\n      LWCSwapData.address\n    ); // this is duplicate code\n    LWCSwap.methods\n      .buy_token()\n      .send({ value: etherAmount, from: tempAccount[0] })\n      .on(\"transactionHash\", (hash) => {\n        setLoader(false);\n      });\n  };\n\n\n\n  const sellTokens = async (tokenAmount, setLoader, account) => {\n    const web3 = window.web3;\n    const networkId = await web3.eth.net.getId();\n    const LWCSwapData = EthSwap.networks[networkId];\n    const LWCSwap = new web3.eth.Contract(EthSwap.abi, LWCSwapData.address);\n    const tokenData = Token.networks[networkId];\n    setLoader(true);\n    const token = new web3.eth.Contract(Token.abi, tokenData.address); // this is duplicate code\n    console.log(LWCSwapData.address)\n    token.methods\n      .approve(LWCSwapData.address, tokenAmount)\n      .send({ from: account })\n      .on(\"transactionHash\", (hash) => {\n        LWCSwap.methods\n          .sellToken(tokenAmount)\n          .send({ from: account })\n          .on(\"transactionHash\", (hash) => {\n            setLoader(false);\n          });\n      });\n  };\n\n\n\n  export { loadAccount, loadWeb3, loadBalance,loadContract, buyTokens, sellTokens};","import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Fancylogo from './components/Fancylogo/Fancylogo';\nimport { useState, useEffect } from 'react';\nimport Lottery from './components/Lottery/Lottery';\nimport Swap from './components/Swap/Swap';\nimport Footer from './components/Footer/Footer'\nimport Timeline from './components/Timeline/Timeline'\nimport Team from './components/Team/Team'\nimport NFT from './components/NFT/NFT';\nimport Metaverse from './components/Metaverse/Metaverse';\nimport {loadAccount, loadWeb3, loadContract, buyTokens, sellTokens, loadBalance} from './utils/utils';\n\n\nfunction App() {\n  const SwapShow = 2;\n  const LotteryShow = 1;\n\n  const [show, setShow] = useState(SwapShow);\n  const [account, setAccount] = useState(null);\n  const [balanceAsEther, setbalanceAsEther] = useState();\n  const [tokenBal, setTokenBal] = useState(0);\n  const [loading, setLoader] = useState(false);\n  const [manager, setManager] = useState('');\n  const [lotteryContract,setLotteryContract] = useState();\n  const [lotteryAddress,setLotteryAddress] = useState(\"\");\n  useEffect(()=>{\n    loadWeb3();\n    loadAccount(setAccount);\n    loadContract({setManager, setLotteryContract, setLotteryAddress});\n  },[])\n  useEffect(() => {\n    window.ethereum?.on(\"accountsChanged\", handleAccountChange);\n    return () => {\n      window.ethereum?.removeListener(\"accountsChanged\", handleAccountChange);\n    };\n  });\n  \n  useEffect(()=>{\n  alert('Please use Polygon Test Net to Connect !!');\n  },[])\n\n  useEffect(()=>{\n    loadBalance({account, setbalanceAsEther,setTokenBal });\n  },[account,loading])\n  const handleAccountChange = (...args) => {\n    // you can console to see the args\n    const accounts = args[0] ;\n    // if no accounts that means we are not connected\n    if (accounts.length === 0) {\n      console.log(\"Please connect to metamask\");\n      // our old data is not current connected account\n      // currentAccount account that you already fetched and assume you stored it in useState\n    } else if (accounts[0] !== account) {\n      // if account changed you should update the currentAccount so you return the updated the data\n      // assuming you have [currentAccount,setCurrentAccount]=useState\n      // however you are tracking the state currentAccount, you have to update it. in case of redux you have to dispatch update action etc\n      setAccount(accounts[0])\n    }\n  };\n  return (\n\n    <div className=\"App\">\n     {/* <div className = \"loader-wrapper\"> \n<span ClassName= \"loader\" ><span className= \"loader-inner\" ></span> </span>\n</div>\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n<script>\n  $(window).on(\"load\",function(){\n    $(\".loader-wrapper\").fadeOut(\"slow\")\n  })\n</script> */}\n      <Navbar handler={setShow} show={show} account={account}/>\n     \n      <div className='container'>    \n        <div id=\"space\">\n          <Fancylogo />\n        </div>\n        {!loading?\n        <div className='main'>\n          {show === LotteryShow && <Lottery manager={manager} account={account} setLoader={setLoader}/>}\n          {show === SwapShow && \n          <Swap  \n            etherBalance={balanceAsEther}\n            tokenBalance={tokenBal}\n            buyTokens={async (amount)=>{\n              await buyTokens(amount, setLoader, account);\n            }}\n            sellTokens={async (amount)=>{\n              await sellTokens(amount, setLoader, account);\n              \n            }}\n            />}\n        </div>:<div>loading...</div>}\n      </div>\n      <Team />  \n      <Timeline />\n<NFT/>\n \n<Metaverse/>\n           \n<Footer />\n        \n         \n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}